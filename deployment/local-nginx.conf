#user  nobody;
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    send_timeout 2s;
    sendfile        on;
    keepalive_timeout  10s;

    server {
        listen       80;
        server_name  localhost;

      proxy_set_header    Host              $host;
      proxy_set_header    X-Real-IP         $remote_addr;
      proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header    X-Client-Verify   SUCCESS;
      proxy_set_header    X-Client-DN       $ssl_client_s_dn;
      proxy_set_header    X-SSL-Subject     $ssl_client_s_dn;
      proxy_set_header    X-SSL-Issuer      $ssl_client_i_dn;
      proxy_set_header    X-Forwarded-Proto http;
      proxy_read_timeout 1s;
      proxy_connect_timeout 1s;


        location / {
          proxy_pass          http://host.docker.internal:3000;
        }

        # In theory, we can locally swap this pass with the remote service /api for a remote debugging
        location /api {
          proxy_pass          http://host.docker.internal:8080;
        }

        location /actuator {
          proxy_pass          http://host.docker.internal:8080;
        }

        location /magic-link {
          proxy_pass          http://host.docker.internal:8080;
        }

#         location / {
#           proxy_pass          http://localhost:3000;
#           proxy_set_header    Host              $host;
#           proxy_set_header    X-Real-IP         $remote_addr;
#           proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
#           proxy_set_header    X-Client-Verify   SUCCESS;
#           proxy_set_header    X-Client-DN       $ssl_client_s_dn;
#           proxy_set_header    X-SSL-Subject     $ssl_client_s_dn;
#           proxy_set_header    X-SSL-Issuer      $ssl_client_i_dn;
#           proxy_set_header    X-Forwarded-Proto http;
#           proxy_read_timeout 1800;
#           proxy_connect_timeout 1800;
#         }

    }

}
